no.nav:
  gateways:
    k9-selvbetjening-oppslag: # Settes i nais/<cluster>.json: # Settes i nais/<cluster>.json

  security.jwt:
    issuer:
      idporten:
        discoveryUrl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL} # settes av configmap: loginservice-idporten i naiserator.yml
        accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE} # settes av configmap: loginservice-idporten i naiserator.yml
      tokenx:
        discoveryUrl: ${TOKEN_X_WELL_KNOWN_URL}
        accepted_audience: ${TOKEN_X_CLIENT_ID}
      azure:
        discoveryUrl: ${AZURE_APP_WELL_KNOWN_URL}
        accepted_audience: ${AZURE_APP_CLIENT_ID}
        cookie_name: azure_token
    client:
      registration:
        tokenx-k9-selvbetjening-oppslag:
          token-endpoint-url: ${TOKENDINGS_BASE_URL}/token
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-auth-method: private_key_jwt
            client-id: ${TOKEN_X_CLIENT_ID}
            client-jwk: ${TOKEN_X_PRIVATE_JWK}
          token-exchange:
            audience: ${K9_SELVBETJENING_OPPSLAG_TOKEN_X_AUDIENCE}

        azure-k9-selvbetjening-oppslag:
          token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
          grant-type: client_credentials
          scope: ${K9_SELVBETJENING_OPPSLAG_AZURE_AUDIENCE}
          authentication:
            client-auth-method: private_key_jwt
            client-id: ${AZURE_APP_CLIENT_ID}
            client-jwk: ${AZURE_APP_JWK}

topic:
  # Bryter betegner av/på funksjon for kafkalytter. True (på), False (av).
  listener:
    # topic.listener.k9-sak
    k9-sak:
      id: k9-sak-listener
      navn: dusseldorf.privat-k9-sak-innsyn-v1
      bryter: true
      dry-run: false

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, prometheus
      path-mapping:
        prometheus: /metrics

spring:
  application:
    name: # Settes i nais/<cluster>.json

  rest:
    retry:
      multiplier: 2
      initialDelay: 1000
      maxDelay: 4000
      maxAttempts: 3

  flyway:
    baselineOnMigrate: true
    enabled: true
    clean-on-validation-error: true
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  datasource:
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 2
      connection-timeout: 1000
    url: jdbc:postgresql://${NAIS_DATABASE_K9_SAK_INNSYN_API_DB_K9_SAK_INNSYN_API_DB_HOST}:${NAIS_DATABASE_K9_SAK_INNSYN_API_DB_K9_SAK_INNSYN_API_DB_PORT}/${NAIS_DATABASE_K9_SAK_INNSYN_API_DB_K9_SAK_INNSYN_API_DB_DATABASE}
    username: ${NAIS_DATABASE_K9_SAK_INNSYN_API_DB_K9_SAK_INNSYN_API_DB_USERNAME}
    password: ${NAIS_DATABASE_K9_SAK_INNSYN_API_DB_K9_SAK_INNSYN_API_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

kafka:
  aiven:
    servers: ${KAFKA_BROKERS}
    consumer:
      enable-auto-commit: false
      group-id: ${spring.application.name}
      auto-offset-reset: # overstyres fra nais/<cluster>.json
      isolation-level: read_committed
      retry-interval: 60_000 # Egendefinert property
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      schemaRegistryUrl: ${KAFKA_SCHEMA_REGISTRY}

    producer:
      client-id: ${HOSTNAME}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      transaction-id-prefix: .tx-
      retries: 3

springdoc:
  api-docs:
    enabled: ${SWAGGER_ENABLED:false}
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:false}
    disable-swagger-default-url: true
    path: swagger-ui.html
    oauth:
      use-pkce-with-authorization-code-grant: true
      client-id: ${AZURE_APP_CLIENT_ID}
      scope-separator: ","
  oAuthFlow:
    authorizationUrl: https://login.microsoftonline.com/navq.onmicrosoft.com/oauth2/v2.0/authorize
    tokenUrl: https://login.microsoftonline.com/navq.onmicrosoft.com/oauth2/v2.0/token
    apiScope: api://${AZURE_APP_CLIENT_ID:abc123}/.default
